name: Build and Release
on:
    push:
        tags:
            - "v[0-9]+.[0-9]+.[0-9]+.[0-9]+"

permissions:
    contents: write

env:
    PLUGIN_SLN_NAME: "DynamicSequencer"
    PLUGIN_DLL_NAME: "DanielHeEGG.NINA.DynamicSequencer"
    PLUGIN_MANIFEST_PATH: "d/DynamicSequencer/3.0.0"

jobs:
    build-and-release:
        runs-on: windows-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Build
              run: |
                  dotnet restore "${{ env.PLUGIN_SLN_NAME }}.sln"
                  dotnet build "${{ env.PLUGIN_SLN_NAME }}.sln" -c Release -o ./bin/Release
                  curl -LO https://raw.githubusercontent.com/isbeorn/nina.plugin.manifests/refs/heads/main/tools/CreateManifest.ps1?raw=true
                  pwsh CreateManifest.ps1 -file "./bin/Release/${{ env.PLUGIN_DLL_NAME }}.dll" -installerUrl "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/${{ env.PLUGIN_DLL_NAME }}.dll"
            - name: Release
              uses: softprops/action-gh-release@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  draft: false
                  prerelease: false
                  files: |
                      ./bin/Release/${{ env.PLUGIN_DLL_NAME }}.dll
                      ./manifest.json
            - name: Upload Manifest
              uses: actions/upload-artifact@v4
              with:
                  name: plugin-manifest
                  path: ./manifest.json

    publish-manifest:
        runs-on: ubuntu-latest
        needs: build-and-release
        steps:
            - name: Download Manifest
              uses: actions/download-artifact@v4
              with:
                  name: plugin-manifest
            - name: Clone Manifest Repo
              run: |
                  git clone https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository_owner }}/nina.plugin.manifests.git
                  cd nina.plugin.manifests
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git checkout -b "${{ env.PLUGIN_SLN_NAME }}/${{ github.ref_name }}"
            - name: Copy Manifest File
              run: |
                  cp "./manifest.json" "./nina.plugin.manifests/manifests/${{ env.PLUGIN_MANIFEST_PATH }}/manifest.json"
                  cd nina.plugin.manifests
                  git add .
                  git commit -m "${{ env.PLUGIN_SLN_NAME }} ${{ github.ref_name }}"
                  git push -f origin "${{ env.PLUGIN_SLN_NAME }}/${{ github.ref_name }}"
            - name: Create PR
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT }}
              run: |
                  gh pr create \
                    --title "${{ env.PLUGIN_SLN_NAME }} ${{ github.ref_name }}" \
                    --head ${{ github.repository_owner }}:${{ env.PLUGIN_SLN_NAME }}/${{ github.ref_name }} \
                    --body ""\
                    --base main \
                    --repo isbeorn/nina.plugin.manifests
